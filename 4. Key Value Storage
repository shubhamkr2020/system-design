Sources: 
  1. Alex Xu Book
  2. Tushar roy: https://www.youtube.com/watch?v=rnZmdmlR-2M

1. Functional Requirements:
  1. put(key, value)
  2. get(key)
  3. separate service to store the key value pairs.

2. Non Functional requirments:
  1. low latency
  2. high avialability
  3. highly or automatically scalable

3. Single server key value store optimisations:
  compression
  use disks to store - but even with these highly scalable system is not possible

4. Distributed key value store
  1. use consistent hashing to distribute the servers and hash the clients to serve the request efficiently.

5. Bloom filter:
  1. probabilistic data structure to find if the data is present in the given partition (huge data) or not.
  2. only gives false positives but never false negatives i.e. 
    it might say that the data is present but actually its not but never say data is absent and actually it was present.
  3. So, bloom filter is used to find which node has the data and then query that data.
  4. it used bits and hashing to do so.
  5. 

6. Explain all the database concepts for relication and partitioning.

